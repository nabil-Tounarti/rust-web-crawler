name: Build and Push OCI Image

on:
  push:
    branches:
      - main
      - 'feature/*'
      - 'bugfix/*'
    tags:
      - 'v*.*.*' # Triggers on version tags like v1.0.0

jobs:
  prepare:
    name: Determine Image Tag
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.determine-tag.outputs.tag }}
    steps:
      - name: Determine Docker tag based on Git ref
        id: determine-tag
        run: |
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-8)

          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            TAG_NAME="${{ github.ref_name }}"
            TAG_NAME="${TAG_NAME#v}"  # Remove 'v' prefix using bash parameter expansion
          elif [[ "${{ github.ref_name }}" == "main" ]]; then
            TAG_NAME="dev-${SHORT_SHA}"
          elif [[ "${{ github.ref_name }}" == feature/* || "${{ github.ref_name }}" == bugfix/* ]]; then
            TAG_NAME="feature-${SHORT_SHA}"
          else
            SLUG_REF_NAME=$(echo ${{ github.ref_name }} | tr '/' '-')
            TAG_NAME="${SLUG_REF_NAME}-${SHORT_SHA}"
          fi
          
          echo "tag=${TAG_NAME}" >> "$GITHUB_OUTPUT"
          echo "Determined image tag: ${TAG_NAME}"

  build-and-publish:
    name: Build and Publish to Registry
    uses: iExecBlockchainComputing/github-actions-workflows/.github/workflows/docker-build.yml@main
    with:
      registry: docker-regis.iex.ec
      image-name: docker-regis.iex.ec/tee-worker-pre-compute-rust
      image-tag: ${{ needs.prepare.outputs.tag }}
      push: true

    secrets:
      username: ${{ secrets.DOCKER_REGIS_USERNAME }}
      password: ${{ secrets.DOCKER_REGIS_PASSWORD }}

    needs: prepare
